parse file nodes

create metadata object for each file node
 - end of path
 - filenode
 - filename guess
 - is_index False no, True yes, None unknown
 - parent folder node


create "root" folder and "node_modules" folder

  key things:
    exposed root - this is a node module
    single dot - this is a sibling
    double got - relative path

find all siblings and make their path's match
  ie - do all siblings that know agree on their parent's name?
     - do all siblings that know agree on grandparent's name?
  save path as deep as we know it.
    If we have multiple sibling, flag them as having known location

build anything in "node_modules"
  we have deterministic path if we avoid problems with "index".
  default to "index" where unclear

build the tree with the unnamed trunk
  entry is the only path with unnamed folders, build special nodes that can have unnamed parents and start building tree.

  if a file already has a parent, confirm that your walk matches.
  if it doesn't
    - one too shallow: starting point is an index
    - one too deep: referring parent is in index

checkreps

construct the folder heiarchy